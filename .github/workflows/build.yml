name: Build 

on: [push]

# on:
#   push:
#     branches:
#       - master
#     tags:
#       - "*"
#   pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: set up go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20
          # go-version: 1.19

      - name: display go version
        run: go version

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2

      - name: GITHUB_REF
        run: echo ${GITHUB_REF##*/}
      - name: run
        run: make run

      # - name: build 
      #   run: ./scripts/build.sh

      # - name: docker build
      #   run: docker build  --platform linux/amd64  -t indexvm .

      # - name: docker tag1
      #   run: docker tag  indexvm:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_MAIN_REGION }}.amazonaws.com/indexvm:latest
      #   # working-directory: ./examples/indexvm
      # - name: docker tag2
      #   run: docker tag  indexvm:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_MAIN_REGION }}.amazonaws.com/indexvm:`date +%Y-%m-%d-%H-%I-%S`-$GITHUB_SHA-${GITHUB_REF##*/}
      #   # working-directory: ./examples/indexvm

      # # AWS Credentials
      # - name: create .aws
      #   run: mkdir ~/.aws
      # - name: echo1
      #   run: echo '[default]' > ~/.aws/credentials
      # - name: echo2
      #   run: echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
      # - name: echo3
      #   run: echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

      # - name: echo4
      #   run: echo '[default]' > ~/.aws/config
      # - name: echo5
      #   run: echo "region = ${{ secrets.AWS_MAIN_REGION }}" >> ~/.aws/config

      # # DOCKER PUSH
      # - name: docker login
      #   run: aws ecr get-login-password --region ${{ secrets.AWS_MAIN_REGION }} |  docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_MAIN_REGION}}.amazonaws.com
      # - name: docker push
      #   run: docker push  --all-tags ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_MAIN_REGION }}.amazonaws.com/indexvm

      # # - name: delete old docker image
      # #   run: ./scripts/delete_old_docker_images.rb indexvm eu-west-1
      # #   working-directory: ./examples/indexvm


      # - name: delete old docker image
      #   run: ./scripts/delete_old_docker_images.rb indexvm ${{ secrets.AWS_MAIN_REGION }}
      #   working-directory: ./examples/indexvm



      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "GitHub Action indexvm Docker Build/Push result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\nDocker Repository URL: indexvm \nhttps://${{ secrets.AWS_MAIN_REGION }}.console.aws.amazon.com/ecr/repositories/private/${{ secrets.AWS_ACCOUNT_ID }}/indexvm?region=${{ secrets.AWS_MAIN_REGION }}\n",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action indexvm Docker Build/Push result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\nDocker Repository URL: indexvm \nhttps://${{ secrets.AWS_MAIN_REGION }}.console.aws.amazon.com/ecr/repositories/private/${{ secrets.AWS_ACCOUNT_ID }}/indexvm?region=${{ secrets.AWS_MAIN_REGION }}\n"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
